/**
 * Connect16RESTful v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Connect16ResTfulV1);
  }
}(this, function(expect, Connect16ResTfulV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Connect16ResTfulV1.VaultCreditCard();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VaultCreditCard', function() {
    it('should create an instance of VaultCreditCard', function() {
      // uncomment below and update the code to test VaultCreditCard
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be.a(Connect16ResTfulV1.VaultCreditCard);
    });

    it('should have the property magneticTracks (base name: "MagneticTracks")', function() {
      // uncomment below and update the code to test the property magneticTracks
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property track1 (base name: "Track1")', function() {
      // uncomment below and update the code to test the property track1
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property track2 (base name: "Track2")', function() {
      // uncomment below and update the code to test the property track2
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property _number (base name: "Number")', function() {
      // uncomment below and update the code to test the property _number
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property maskedNumber (base name: "MaskedNumber")', function() {
      // uncomment below and update the code to test the property maskedNumber
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property holder (base name: "Holder")', function() {
      // uncomment below and update the code to test the property holder
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property expDate (base name: "ExpDate")', function() {
      // uncomment below and update the code to test the property expDate
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property CVV (base name: "CVV")', function() {
      // uncomment below and update the code to test the property CVV
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "Address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "City")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property ZIP (base name: "ZIP")', function() {
      // uncomment below and update the code to test the property ZIP
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property swiped (base name: "Swiped")', function() {
      // uncomment below and update the code to test the property swiped
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property typeString (base name: "TypeString")', function() {
      // uncomment below and update the code to test the property typeString
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property cVVType (base name: "CVVType")', function() {
      // uncomment below and update the code to test the property cVVType
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property notPresent (base name: "NotPresent")', function() {
      // uncomment below and update the code to test the property notPresent
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property response (base name: "Response")', function() {
      // uncomment below and update the code to test the property response
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property cardID (base name: "CardID")', function() {
      // uncomment below and update the code to test the property cardID
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "Note")', function() {
      // uncomment below and update the code to test the property note
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

    it('should have the property main (base name: "Main")', function() {
      // uncomment below and update the code to test the property main
      //var instane = new Connect16ResTfulV1.VaultCreditCard();
      //expect(instance).to.be();
    });

  });

}));
