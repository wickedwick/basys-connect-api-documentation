/**
 * Connect16RESTful v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Connect16ResTfulV1);
  }
}(this, function(expect, Connect16ResTfulV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Connect16ResTfulV1.CheckTransactionSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CheckTransactionSettings', function() {
    it('should create an instance of CheckTransactionSettings', function() {
      // uncomment below and update the code to test CheckTransactionSettings
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be.a(Connect16ResTfulV1.CheckTransactionSettings);
    });

    it('should have the property reader (base name: "Reader")', function() {
      // uncomment below and update the code to test the property reader
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property contactName (base name: "ContactName")', function() {
      // uncomment below and update the code to test the property contactName
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property contactTitle (base name: "ContactTitle")', function() {
      // uncomment below and update the code to test the property contactTitle
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property emailAddress (base name: "EmailAddress")', function() {
      // uncomment below and update the code to test the property emailAddress
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property phoneDefault (base name: "PhoneDefault")', function() {
      // uncomment below and update the code to test the property phoneDefault
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "Fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property billingAddressDefault (base name: "BillingAddressDefault")', function() {
      // uncomment below and update the code to test the property billingAddressDefault
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress2 (base name: "BillingAddress2")', function() {
      // uncomment below and update the code to test the property billingAddress2
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property billingCityDefault (base name: "BillingCityDefault")', function() {
      // uncomment below and update the code to test the property billingCityDefault
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property billingStateDefault (base name: "BillingStateDefault")', function() {
      // uncomment below and update the code to test the property billingStateDefault
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property billingZipDefault (base name: "BillingZipDefault")', function() {
      // uncomment below and update the code to test the property billingZipDefault
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property pONumber (base name: "PONumber")', function() {
      // uncomment below and update the code to test the property pONumber
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "InvoiceNumber")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property businessName (base name: "BusinessName")', function() {
      // uncomment below and update the code to test the property businessName
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property customerNumber (base name: "CustomerNumber")', function() {
      // uncomment below and update the code to test the property customerNumber
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property referenceNote (base name: "ReferenceNote")', function() {
      // uncomment below and update the code to test the property referenceNote
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

    it('should have the property defaultSECCode (base name: "DefaultSECCode")', function() {
      // uncomment below and update the code to test the property defaultSECCode
      //var instane = new Connect16ResTfulV1.CheckTransactionSettings();
      //expect(instance).to.be();
    });

  });

}));
