/* 
 * Connect16RESTful v1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ReportingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ReportingApiTests
    {
        private ReportingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ReportingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ReportingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ReportingApi
            //Assert.IsInstanceOfType(typeof(ReportingApi), instance, "instance is a ReportingApi");
        }

        /// <summary>
        /// Test ApiV1ReportingGetBatchesByDateBatchDateGet
        /// </summary>
        [Test]
        public void ApiV1ReportingGetBatchesByDateBatchDateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? batchDate = null;
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1ReportingGetBatchesByDateBatchDateGet(batchDate, account, password);
            //Assert.IsInstanceOf<List<Batch>> (response, "response is List<Batch>");
        }
        /// <summary>
        /// Test ApiV1ReportingGetCheckTerminalSettingsBySECSecCodeGet
        /// </summary>
        [Test]
        public void ApiV1ReportingGetCheckTerminalSettingsBySECSecCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string secCode = null;
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1ReportingGetCheckTerminalSettingsBySECSecCodeGet(secCode, account, password);
            //Assert.IsInstanceOf<List<TerminalSettings>> (response, "response is List<TerminalSettings>");
        }
        /// <summary>
        /// Test ApiV1ReportingGetCheckTerminalSettingsTerminalIDGet
        /// </summary>
        [Test]
        public void ApiV1ReportingGetCheckTerminalSettingsTerminalIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? terminalID = null;
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1ReportingGetCheckTerminalSettingsTerminalIDGet(terminalID, account, password);
            //Assert.IsInstanceOf<List<TerminalSettings>> (response, "response is List<TerminalSettings>");
        }
        /// <summary>
        /// Test ApiV1ReportingGetCheckTerminalsGet
        /// </summary>
        [Test]
        public void ApiV1ReportingGetCheckTerminalsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1ReportingGetCheckTerminalsGet(account, password);
            //Assert.IsInstanceOf<List<TerminalSettings>> (response, "response is List<TerminalSettings>");
        }
        /// <summary>
        /// Test ApiV1ReportingGetTransactionsByBatchBatchGet
        /// </summary>
        [Test]
        public void ApiV1ReportingGetTransactionsByBatchBatchGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batch = null;
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1ReportingGetTransactionsByBatchBatchGet(batch, account, password);
            //Assert.IsInstanceOf<List<QueryTransaction>> (response, "response is List<QueryTransaction>");
        }
        /// <summary>
        /// Test ApiV1ReportingGetTransactionsByDateTransactionDateGet
        /// </summary>
        [Test]
        public void ApiV1ReportingGetTransactionsByDateTransactionDateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? transactionDate = null;
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1ReportingGetTransactionsByDateTransactionDateGet(transactionDate, account, password);
            //Assert.IsInstanceOf<List<QueryTransaction>> (response, "response is List<QueryTransaction>");
        }
    }

}
