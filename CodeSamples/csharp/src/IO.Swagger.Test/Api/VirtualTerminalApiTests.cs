/* 
 * Connect16RESTful v1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing VirtualTerminalApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class VirtualTerminalApiTests
    {
        private VirtualTerminalApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new VirtualTerminalApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VirtualTerminalApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VirtualTerminalApi
            //Assert.IsInstanceOfType(typeof(VirtualTerminalApi), instance, "instance is a VirtualTerminalApi");
        }

        /// <summary>
        /// Test ApiV1VirtualTerminalMarkTransactionIDPost
        /// </summary>
        [Test]
        public void ApiV1VirtualTerminalMarkTransactionIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string transactionID = null;
            //string account = null;
            //string password = null;
            //var response = instance.ApiV1VirtualTerminalMarkTransactionIDPost(transactionID, account, password);
            //Assert.IsInstanceOf<Response> (response, "response is Response");
        }
        /// <summary>
        /// Test ApiV1VirtualTerminalMarkTransactionsPost
        /// </summary>
        [Test]
        public void ApiV1VirtualTerminalMarkTransactionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string account = null;
            //string password = null;
            //List<string> body = null;
            //var response = instance.ApiV1VirtualTerminalMarkTransactionsPost(account, password, body);
            //Assert.IsInstanceOf<Response> (response, "response is Response");
        }
        /// <summary>
        /// Test ApiV1VirtualTerminalQueryPost
        /// </summary>
        [Test]
        public void ApiV1VirtualTerminalQueryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string account = null;
            //string password = null;
            //Transaction body = null;
            //var response = instance.ApiV1VirtualTerminalQueryPost(account, password, body);
            //Assert.IsInstanceOf<QueryTransaction> (response, "response is QueryTransaction");
        }
        /// <summary>
        /// Test ApiV1VirtualTerminalSubmitCheckPost
        /// </summary>
        [Test]
        public void ApiV1VirtualTerminalSubmitCheckPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string account = null;
            //string password = null;
            //CheckTransaction body = null;
            //var response = instance.ApiV1VirtualTerminalSubmitCheckPost(account, password, body);
            //Assert.IsInstanceOf<CheckTransaction> (response, "response is CheckTransaction");
        }
        /// <summary>
        /// Test ApiV1VirtualTerminalSubmitPost
        /// </summary>
        [Test]
        public void ApiV1VirtualTerminalSubmitPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string account = null;
            //string password = null;
            //Transaction body = null;
            //var response = instance.ApiV1VirtualTerminalSubmitPost(account, password, body);
            //Assert.IsInstanceOf<Transaction> (response, "response is Transaction");
        }
        /// <summary>
        /// Test ApiV1VirtualTerminalUpdateTransactionInfoTransactionIDPost
        /// </summary>
        [Test]
        public void ApiV1VirtualTerminalUpdateTransactionInfoTransactionIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string account = null;
            //string password = null;
            //string transactionID = null;
            //UpdateTransactionInfo body = null;
            //var response = instance.ApiV1VirtualTerminalUpdateTransactionInfoTransactionIDPost(account, password, transactionID, body);
            //Assert.IsInstanceOf<Response> (response, "response is Response");
        }
    }

}
